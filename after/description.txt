display.h
#Any function that display stuff will be stored here
    Declare:
        void color(char *color_name)
            -Set text color
        void welcome(char *username)
            -Display welcome text
        void delay(int number_of_seconds)
            -Delaying the program
        void pass_syntax_guide()
            -Display password syntax
        void end_message()
            -Display end message
        void guide()
            -Display guide
        int user_choice(char *text, int min_val, int max_val)
            -Display question and wait for the user to enter their choice then
            return the choosen choice
    Include:
        None

check.h
# Any function that checks that doesn't need access to the DB will be stored here
    Declare:
        void checkessfile()
            -Check if essential file exist and if doesn't then the program will
            create the file
        int check_contain_sp(char str[])
            -Check if the str contain any special char space include
        int check_pass_syntax(char *password)
            -Check if the given password has the correct syntax
        int check_value_match_arr(int val, int arr[], int size)
            -Check check if the give value match the any member in the arr
        int check_topic_exist(char topic[])
            -Check if the given topic exist in the topic.txt
        int countQ(char topic[]) 
            -Count all the question in the given topic
    Include:
        None

qaManager.h  
# Any func that realted to Q&A will be stored here
    Declare:
        void stringtotextfile(char topic[])
            -Change string to textfile by add ".txt"
        void get_Q(char topic[], int num, char return_question[])
            -Get the question from the specific topic
        void get_A(char topic[], int num, char return_answer[])
            -Get the answer from the specific topic
    Include:
        None

dataManager.h 
# Any func that use for accessing the database will be kept here
    Declare:
        int check_user_exist(char *user)
            -Check if the given user exist in the database
        int check_match(char *username, char *password)
            -Verify if the given username match with the given password with the DB
        void load_score(char username[],double *score, int *allq, int *cq, int *wq)
            -Load all the info in the DB of the user to the variable
    Include:
        display.h

rlg.h
# Any function that is related to login, register, or guest will be stored here
    Declare:
        void get_pass(char passw[])
            -Password entry also encrypt password while user enters it.
        int take_username_reg(char *returnuser)
            -Ask user what username will the user use
        int take_password_reg(char *return_password)
            -Ask user what password will the user use
        int take_username_log(char *returnuser)
            -Ask user what is their username
        int take_password_log(char username[], char return_password[]) 
            -Ask user what is their password for the given username
    Include:
        check.h
        dataManager.h

process.h
# Any function that use for calculate or process will be stored here
    Declare:
        int stdq(int am_q)
            -Calculate the best amount of question for standard mode
List of going to add:
